pipeline:
  name: HTML-Deployment-Pipeline
  identifier: HTMLDeploymentPipeline
  projectIdentifier: default_project
  orgIdentifier: default
  description: Pipeline to demonstrate deployment of simple html page to AWS
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: HTML
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build_Docker_Image
                  identifier: Build_Docker_Image
                  spec:
                    shell: Sh
                    command: |-
                      set -e 
                      # Build Docker image and retrieve IMAGE_ID 
                      docker build -t my-html-app . 
                      IMAGE_ID=$(docker images -q my-html-app:latest) 
                      echo "IMAGE_ID: $IMAGE_ID" echo "export IMAGE_ID=$IMAGE_ID" >> ~/.bashrc
                  description: step to build docker image
              - step:
                  type: Run
                  name: PushToArtifactory
                  identifier: PushToArtifactory
                  spec:
                    shell: Sh
                    command: |-
                      # Debug: Print the IMAGE_ID (ensure it's set correctly)
                      echo "IMAGE_ID: $IMAGE_ID"
                      # Check if IMAGE_ID is set and not empty
                      if [ -z "$IMAGE_ID" ]; then
                        echo "Error: IMAGE_ID is not set or is empty."
                        exit 1
                      fi
                      # Retrieve secrets from Harness 
                      JFROG_USERNAME=<+secrets.getValue("jFrog")> 
                      JFROG_PASSWORD=<+secrets.getValue("jfrogPass")>
                      ARTIFACTORY_TOKEN=<+secrets.getValue("ARTIFACTORY_TOKEN")>
                      echo $ARTIFACTORY_TOKEN | docker login trialvj.jfrog.io --username vjdevops@hotmail.com --password-stdin
                      #docker login -u vjdevops@hotmail.com -p $ARTIFACTORY_TOKEN trialvj.jfrog.io
                      docker tag my-html-app:$IMAGE_ID trialvj.jfrog.io/docker-html-local/my-html-app:latest
                      docker push trialvj.jfrog.io/docker-html-local/my-html-app:latest
                  description: push built docker image to artifactory
